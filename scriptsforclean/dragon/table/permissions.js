PERMISSIONS={entities:null,entitiesCount:0,mypermission:null,run:function($scope){$scope.HACK=function(){$scope.option.show=function(e,i){return!0},$scope.allow=function(e,i,s){return!0},$scope.setPermission("add",!0),$scope.setPermission("edit",!0),$scope.setPermission("remove",!0),$scope.setPermission("view",!0),$scope.setPermission("import",!0),$scope.setPermission("copy",!0),$scope.setPermission("actions",!0),$(".icon-plus-circle2 ").parent().show()},$scope.allow=function(permisionName,or,isModal){var finalCrud=eval(`PERMISSIONS.mypermission.${$scope.modelName}`);if(void 0!==finalCrud&&(isModal&&(DSON.oseaX(ARRAY.last(MODAL.historyObject))||(finalCrud=eval(`PERMISSIONS.mypermission.${$scope.modelName}`))),void 0!==finalCrud.allow&&""!==permisionName)){if(or=DSON.ifundefined(or,!0),!Array.isArray(permisionName))return eval("finalCrud.allow."+permisionName+" === true;");for(const permisionNameElement of permisionName)if(or){if(!0===eval("finalCrud.allow."+permisionNameElement+" === true;"))return!0}else if(!1===eval("finalCrud.allow."+permisionNameElement+" === true;"))return!1;return!or}return!0},$scope.setPermission=function(permisionName,value){var finalCrud=eval(`PERMISSIONS.mypermission.${$scope.modelName}`);if(void 0!==finalCrud){if(void 0!==finalCrud.allow&&""!==permisionName)if(Array.isArray(permisionName))for(const permisionNameElement of permisionName)eval(`PERMISSIONS.mypermission.${$scope.modelName}.allow.`+permisionNameElement+" = value;");else eval(`PERMISSIONS.mypermission.${$scope.modelName}.allow.`+permisionName+" = value;");$scope.refreshAngular()}},$scope.characterist=function(characterist,or,isModal){var finalCrud=eval(`CRUD_${$scope.modelName}`);if(isModal&&(DSON.oseaX(ARRAY.last(MODAL.historyObject))||(finalCrud=eval(`CRUD_${$scope.modelName}`))),void 0!==finalCrud.table&&""!==characterist){if(or=DSON.ifundefined(or,!0),!Array.isArray(characterist))return eval("finalCrud.table."+characterist+" !== false;");for(const permisionNameElement of characterist)if(or){if(!0===eval("finalCrud.table."+permisionNameElement+" !== false;"))return!0}else if(!1===eval("finalCrud.table."+permisionNameElement+" !== false;"))return!1;return!or}return!0},$scope.moduleColor=function(e){var i=JSON.stringify(e);return-1!==i.indexOf("false")&&-1!==i.indexOf("true")?"warning":-1===i.indexOf("false")?"success":-1===i.indexOf("true")?"danger":void 0},$scope.moduleName=function(e){return MESSAGE.exist("permissions."+e.replaceAll(/\?/g,"_"))?$scope.menuParentName(e)?$scope.menuParentName(e)+" - "+MESSAGE.i("permissions."+e.replaceAll(/\?/g,"_")):MESSAGE.i("permissions."+e.replaceAll(/\?/g,"_")):$scope.menuParentName(e)?$scope.menuParentName(e)+" - "+capitalize(e.replaceAll("_"," ")):capitalize(e.replaceAll("_"," "))},$scope.menuParentName=function(e){for(var i of CONFIG.menus)if(i.menus){if(i.menus.length>0)for(var s of i.menus)if(s.href.includes(e))return i.text}else if(i.href.includes(e))return i.text},$scope.moduleNameShort=function(e,i){var s=$scope.moduleName(e);return s.length>i?s.substring(0,i)+"...":s},$scope.hasProperties=function(e){return"empty"!==e.type||(Object.keys(e.allow).length>2||(0!==Object.keys(e.allow.export).length||0!==Object.keys(e.allow.file).length)&&void 0)},$scope.boolIcon=function(e){return!0===e?" icon-checkbox-checked":" icon-checkbox-unchecked"},$scope.isObject=function(e){return"object"==typeof e},$scope.savePermission=function(){SWEETALERT.loading({message:MESSAGE.ic("mono.saving")}),BASEAPI.deleteall("permission",{where:[{value:`${$scope.idPermission}`}]},function(e){BASEAPI.insert("permission",{insertData:{id:`${$scope.idPermission}`,object:JSON.stringify($scope.permissions)}},function(e){SWEETALERT.stop(),location.reload()})})}},format:function(){for(var i in CONFIG.permissions.list)CONFIG.permissions.list[i].fix?DSON.merge(CONFIG.permissions.list[i].allow,CONFIG.permissions.list[i].fix,!0):DSON.merge(CONFIG.permissions.list[i].allow,eval(`CONFIG.permissions.types.${CONFIG.permissions.list[i].type}`),!0),PERMISSIONS.entitiesCount++;PERMISSIONS.entities=DSON.OSO(CONFIG.permissions.list),PERMISSIONS.mypermission=DSON.OSO(CONFIG.permissions.list)}};
